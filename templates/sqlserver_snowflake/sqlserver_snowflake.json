{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"LS_AzureBlobStorage": {
			"type": "string"
		},
		"LS_SqlServer": {
			"type": "string"
		},
		"LS_AzureDataLakeStorage": {
			"type": "string"
		},
		"LS_Snowflake": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/sqlserver_snowflake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT s.name AS SchemaName,\nt.name AS TableName\nFROM sys.tables t\nINNER JOIN sys.schemas s\nON t.Schema_id =s.Schema_id\nWHERE s.name = 'dbo'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SqlServerTable",
								"type": "DatasetReference",
								"parameters": {
									"sqlserver": "KRANTHI",
									"DBNames": "EMPLOYEE",
									"Tables": "EMP"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ', item().SchemaName, '.', item().TableName)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SqlServerTable",
											"type": "DatasetReference",
											"parameters": {
												"sqlserver": "KRANTHI",
												"DBNames": "EMPLOYEE",
												"Tables": "EMP"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DelimitedText",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SnowflakeSource",
											"exportSettings": {
												"type": "SnowflakeExportCopyCommand",
												"additionalFormatOptions": {
													"TIME_FORMAT": "'HH24:MI:SS.FFTZH:TZM'"
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "[parameters('LS_AzureBlobStorage')]",
												"type": "LinkedServiceReference"
											},
											"path": "input"
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SnowflakeTable",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Snowflake_DelimitedText",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"ServerName": {
						"type": "String"
					},
					"DBNames": {
						"type": "String"
					},
					"Tables": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SqlServer_Blob_Snowfalke"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SqlServerTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_DelimitedText')]",
				"[concat(variables('factoryId'), '/datasets/DS_SnowflakeTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_Snowflake_DelimitedText')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LS_SqlServer')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"SqlServer": {
							"value": "@dataset().sqlserver",
							"type": "Expression"
						},
						"DBNames": {
							"value": "@dataset().DBNames",
							"type": "Expression"
						},
						"Tables": {
							"value": "@dataset().Tables",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"sqlserver": {
						"type": "String"
					},
					"DBNames": {
						"type": "String"
					},
					"Tables": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LS_AzureDataLakeStorage')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().TableName, '.DelimitedText')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().SchemaName, '/', dataset().TableName)",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SnowflakeTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LS_Snowflake')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "EMPLOYEEID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "FIRSTNAME",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LASTNAME",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CITY",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ZIP",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "EMAIL",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "STATE",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DATEOFJOINING",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HIPHEN",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MIX",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "DEFAULTSIMPLEFORMAT",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "EMPINFO"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Snowflake_DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LS_AzureBlobStorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}
{
	"name": "sqlserver_blob",
	"properties": {
		"activities": [
			{
				"name": "Lookup_ALL_Table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT s.name AS SchemaName,\nt.name AS TableName\nFROM sys.tables t\nINNER JOIN sys.schemas s\nON t.Schema_id =s.Schema_id\nWHERE s.name = 'dbo'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SqlServerTable",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.ServerName",
								"type": "Expression"
							},
							"DBNames": {
								"value": "@pipeline().parameters.DBNames",
								"type": "Expression"
							},
							"Tables": {
								"value": "@pipeline().parameters.Tables",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_ALL_Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_ALL_Table').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM ', item().SchemaName, '.', item().TableName)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SqlServerTable",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@item().ServerName",
											"type": "Expression"
										},
										"DBNames": {
											"value": "@item().SchemaName",
											"type": "Expression"
										},
										"Tables": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_DelimitedText",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": {
											"value": "@item().SchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"ServerName": {
				"type": "string"
			},
			"DBNames": {
				"type": "string"
			},
			"Tables": {
				"type": "string"
			}
		},
		"variables": {
			"SeverName": {
				"type": "String"
			},
			"DBNames": {
				"type": "String"
			},
			"Tables": {
				"type": "String"
			}
		},
		"folder": {
			"name": "SqlServer_blob_Snowflake"
		},
		"annotations": []
	}
}